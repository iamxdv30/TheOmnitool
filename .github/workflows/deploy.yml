name: Staging Deployment Workflow

on:
  push:
    branches:
      - development

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MAIL_USERNAME: info.omnitools@gmail.com
      MAIL_DEFAULT_SENDER: info@theomnitools.com
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      TOKEN_SECRET_KEY: ${{ secrets.TOKEN_SECRET_KEY }}
      SECURITY_PASSWORD_SALT: ${{ secrets.SECURITY_PASSWORD_SALT }}
      DATABASE_URL: 'sqlite:///:memory:'
      FLASK_APP: 'main.py'
      FLASK_ENV: 'testing'
      IS_LOCAL: 'true'
      SESSION_TYPE: 'filesystem'
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          python -m pytest

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.0'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to Staging
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/omnitool-staging.git
          git push heroku development:main --force