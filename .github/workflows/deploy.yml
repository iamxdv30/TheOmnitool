name: CI/CD Workflow

on:
  push:
    branches:
      - development

jobs:
  # Step 1: Push changes to Staging and Deploy to Heroku
  deploy-to-staging:
    runs-on: ubuntu-latest

    steps:
      # Checkout code from the development branch with full history
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history to avoid shallow clone issues

      # Configure Git for GitHub Actions
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Authenticate with GitHub using the GITHUB_TOKEN
      - name: Authenticate with GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}

      # Push changes to staging branch
      - name: Push to Staging Branch
        run: |
          git checkout -b staging
          git push origin staging --force

      # Set up Heroku CLI for deployment
      - name: Set up Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      # Deploy to Heroku Staging App
      - name: Deploy to Heroku Staging
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/omnitool-by-xdv-staging.git
          git push heroku staging:main --force
